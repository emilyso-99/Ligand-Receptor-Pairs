% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/cell_signalling_pdx.R
\name{cell_signaling_pdx}
\alias{cell_signaling_pdx}
\title{Cell Signaling PDX}
\usage{
cell_signaling_pdx(
  mix.data,
  cluster.human = NULL,
  cluster.mouse = NULL,
  c.names.human = NULL,
  c.names.mouse = NULL,
  tol = 0,
  s.score = 0.5,
  write = FALSE,
  verbose = TRUE
)
}
\arguments{
\item{mix.data}{a data frame of n rows (genes) and (mh + mm) columns (cells)
generated by the **data.prepare.pdx()** function.}

\item{cluster.human}{a numeric vector of length mh}

\item{cluster.mouse}{a numeric vector of length mm}

\item{c.names.human}{(optional) cluster names of the human dataset}

\item{c.names.mouse}{(optional) cluster names of the mouse dataset}

\item{tol}{a tolerance parameter for allowing a receptor to be expressed in the
same cluster than the corresponding ligand (see details of the
**cell.signaling()** function)}

\item{s.score}{LRscore threshold}

\item{write}{a logical}

\item{verbose}{a logical}
}
\value{
The function returns "paracrine" interaction lists.
}
\description{
Computes "autocrine" or "paracrine" interactions between cell
clusters from human and mouse single cell transcriptomics.
}
\details{
`s.score` is the threshold on the LRscore. The value must lie in the [0;1]
interval, default is 0.5 to ensure confident ligand-receptor pair
identifications (see our publication). Lower values increase the number of
putative interactions while increasing the false positives. Higher values
do the opposite.

If `write` is TRUE, then the function writes a text file that reports the
interactions in the *cell-signaling* folder. This file is a 4-column table:
ligands, receptors, interaction types ("paracrine", "autocrine",
"autocrine/paracrine" and "specific"), and the associated LRscore.

- This function is to be used with `mix.data` tables generated by the
**data.prepare.pdx()** function.
}
\examples{
mix.data <- matrix(0,nrow=10, ncol=200)
mix.data[seq(1,5),seq(1,100)] <- matrix(runif(500,0,1),nrow=5,ncol=100)
mix.data[seq(6,10),seq(101,200)] <- matrix(runif(500,0,1),nrow=5,ncol=100)
rownames(mix.data) <- c("A2M_human", "AANAT_human", "ADAM10_human", "CD5_human",
"CD9_human", "Lrp1_mouse", "Mtnr1b_mouse", "Axl_mouse", "Cd5l_mouse",
"Adam2_mouse")
colnames(mix.data) <- c(rep("human",100),rep("mouse",100))
cell_signaling_pdx(mix.data)

}
